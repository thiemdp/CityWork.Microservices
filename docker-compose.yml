version: '3.4'

services:
  eureka:
    image: steeltoeoss/eureka-server
    container_name: eureka-discoveryservice
    ports:
       - 8761:8761
    restart: always
  consul:  
    image: consul:lastest
    command: consul agent -dev -log-level=warn -ui -client=0.0.0.0
    container_name: consul-discoveryservice
    ports:
       - 8500:8500
    restart: always
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
       - 5672:5672
       - 15672:15672
    volumes:
       - rabbitmqdata:/var/lib/rabbitmq
    hostname: rabbitmq
    restart: always

  # elasticsearch + Kibana
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    container_name: elasticsearch
    environment:
      - node.name=ws-es-node
      - discovery.type=single-node
      - cluster.name=ws-es-data-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
      # - xpack.security.enabled='false'
      # - xpack.monitoring.enabled='false'
      # - xpack.watcher.enabled='false'
      # - xpack.ml.enabled='false'
      # - http.cors.enabled='true'
      # - http.cors.allow-origin="*"
      # - http.cors.allow-methods=OPTIONS, HEAD, GET, POST, PUT, DELETE
      # - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type, Content-Length
      #- logger.level: debug
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - vibhuviesdata:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - esnet
    restart: always
  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.0
    container_name: kibana
    environment:
      SERVER_NAME: 127.0.0.1
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      # XPACK_GRAPH_ENABLED: false
      # XPACK_ML_ENABLED: false
      # XPACK_REPORTING_ENABLED: false
      # XPACK_SECURITY_ENABLED: false
      # XPACK_WATCHER_ENABLED: false
    ports:
      - "5601:5601"
    networks:
      - esnet
    depends_on:
      - elasticsearch
    restart: "unless-stopped"
      #citywork.services.product.api:
  #prometheus:
  #  image: prom/prometheus
  #  container_name: prometheus
  #  ports:
  #    - "9090:9090"
  #  volumes:
  #    - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #    - prometheus_data:/prometheus
  #  command:
  #    - '--config.file=/etc/prometheus/prometheus.yml'
  #    - '--storage.tsdb.path=/prometheus'
  #    - '--web.console.libraries=/etc/prometheus/console_libraries'
  #    - '--web.console.templates=/etc/prometheus/consoles'
  #    - '--web.enable-lifecycle'
  #    - '--network host'
  #grafana:
  #  image: grafana/grafana-enterprise
  #  container_name: grafana
  #  ports:
  #    - "3000:3000"
  #  image: ${DOCKER_REGISTRY-}cityworkservicesproductapi
  #  build:
  #    context: .
  #    dockerfile: src/Services/Product/CityWork.Services.Product.API/Dockerfile
volumes:
  rabbitmqdata:
  vibhuviesdata:
    driver: local
networks:
  esnet:
 